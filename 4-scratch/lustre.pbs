#!/bin/sh

### The following requests all resources on 1 DGX-1 node
#PBS -l select=1:ncpus=40:ngpus=8

### The "select=1" specifies the number of nodes
### The "ncpus=40:ngpus=8" asks for acccess to all 8 GPU cards
### If you request less than 8 GPU then make the ncpus value
###   five times the ngpus value, e.g. select=1:ncpus=5:ngpus=1

### Specify amount of time required
###  Values less than 4 hours go into a higher priority queue
###  This job only needs 5 minute to run:
#PBS -l walltime=0:05:00

### Specify DGX queue
#PBS -q dgx

### Specify project code
### e.g. 41000001 was the pilot project code
###      Personal is your personal lifetime allowance
### Job will not submit unless this is changed
#PBS -P 99999999

### Specify name for job
#PBS -N lustre

### Standard output by default goes to file $PBS_JOBNAME.o$PBS_JOBID
### Standard error by default goes to file $PBS_JOBNAME.e$PBS_JOBID
### To merge standard output and error use the following
#PBS -j oe

### Start of commands to be run

# Docker image to use for container
#   To see available images run command: nscc-docker images
#   If image is not present, email help@nscc.sg to request pulling image into repository on all DGX nodes
image="nvcr.io/nvidia/cuda:latest"

echo Job should start in your home directory:
pwd

# if I submit from /scratch then that directory is not mounted on host
echo submitted from $PBS_O_WORKDIR
ls -ld $PBS_O_WORKDIR
df /scratch

#  note that $HOME/scratch is a soft link into /scratch
#    /home/users/org/username/scratch -> /scratch/users/org/username
#    If you submit from /home/users/org/username/scratch then PBS may fail to deliver the job stdout/stderr
#           (it thinks that it is in your home directory and will try a cp command which will fail)
#    If you submit from /scratch/users/org/username then PBS should copy back job stdout/stderr correctly
#           (it will use scp to copy the file back to the host you submitted from)

echo
echo === start container
nscc-docker run --lustre $image << EOF
echo Container starts in the directory:
pwd
echo /scratch is mounted inside container
# You can do the following if using "<<EOF" to pass commands as it is expanded by the job shell
ls -ld $PBS_O_WORKDIR
cd $PBS_O_WORKDIR
pwd
df /scratch
EOF
